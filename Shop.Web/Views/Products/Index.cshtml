@model IEnumerable<Shop.Web.Data.Entities.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Products</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <!--Muestra el titulo del campo Name, en el caso ImageUrl le pusimos Image-->
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImageUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastPurchase)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastSale)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAvailabe)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <!--DisplayNameFor muestra el título, DisplayFor muestra el contenido del campo-->
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <!--15 si la imagen no es nula, pinte un image (img) y el src = origen de la imagen. Al src le ponemos
                UrlContent y si el ImageUrl empieza por ~ (como es el caso) el sabe como pintarla de forma correcta.
                Ahora, las otras prodiedades hacen que la imagen se ganatice de 100 pix de ancho y no me las deforma
                las ajusta, asi sea mas grande o alto.-->
            <td>
                @if (!string.IsNullOrEmpty(item.ImageUrl))
                {
                    <img src="@Url.Content(item.ImageUrl)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                }
    
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastSale)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailabe)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
